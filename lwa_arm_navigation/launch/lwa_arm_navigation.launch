<?xml version="1.0"?>
<launch>
	<!-- Loading ...
		 1. the robot_description from the XML file arm_sdh.xml
		 2. the multi_dof_config inside the cob_schunk_planning_description.yaml
		 3. the groups for the default collision_operations inside the cob_schunk_planning_description.yaml -->		 
	<include file="$(find lwa_arm_navigation)/launch/lwa_planning_environment.launch" />

	<!-- Starting the environment_server node of type planning_scene_validity_server -->
	<include file="$(find planning_environment)/launch/environment_server.launch">
		<arg name="use_monitor" value="true" />
		<!-- Use collision map default: false -->
		<arg name="use_collision_map" value="true" />
		<!--remap from="collision_map" to="collision_map_occ" /-->
		  <!--remap from="collision_map_update" to="collision_map_occ_update" /-->
	</include>
	
	<!-- Kinematics Solver -->
	<include file="$(find lwa_arm_navigation)/launch/constraint_aware_kinematics.launch" />

	<!-- OMPL Planner -->    
	<include file="$(find lwa_arm_navigation)/launch/ompl_planning.launch" />

	<!-- Trajectory-filter Server -->
	<include file="$(find lwa_arm_navigation)/launch/trajectory_filter_server.launch" />

	<!-- Including all groups that are able to plan. In this case only the schunk_chain -->
	<include file="$(find lwa_arm_navigation)/launch/move_groups.launch" />
	
	<!-- Send world urdf to param server -->
	<!-- Note: Needed for adding static obstacles without warning in rxconsole -->
	<!-- @ToDo: Testen ob es den Zweck erfÃ¼llt -->
	<!--param name="world_description" command="$(find xacro)/xacro.py $(find cob_gazebo_worlds)/common/worlds/$(env ROBOT_ENV)$(optenv ENV_MODE).urdf.xacro" /-->
	
	<!-- Get collision map from pointcloud -->
	<include file="$(find lwa_arm_navigation)/launch/tof_perception.launch"/>
	
	<!-- Adding known static obstacles to the collision space -->
	<node pkg="lwa_arm_navigation" type="addWorld" output="screen" name="addWorld"/>

	<!-- Specific obstacles in working environment -->
	<node pkg="lwa_arm_navigation" type="addPole1" output="screen" name="addPole1"/>
	<!--node pkg="lwa_arm_navigation" type="addBox1" output="screen" name="addBox1"/--> 
	<!--node pkg="lwa_arm_navigation" type="addBox2" output="screen" name="addBox2"/-->
	<node pkg="lwa_arm_navigation" type="addWorkstation" output="screen" name="addWorkstation"/>
	<node pkg="lwa_arm_navigation" type="addConveyor1" output="screen" name="addConveyor1"/>

</launch>
